<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bunny</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
hsp=0;
vsp=0;
m_speed=7;
time=0;
image_speed=0
image_index=0
view_visible[0]=false; 
view_visible[1]=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bunny movement

//deklaracje
if(global.hp&lt;=0)
{
instance_destroy();
}
key_left=keyboard_check(vk_left); 
key_right=keyboard_check(vk_right);
key_up=keyboard_check_pressed(vk_up);
if(key_right-key_left != 0 ) {
  global.dir = key_right-key_left;
}
hsp=(key_right-key_left)*m_speed;
//kolizja na boki
if (place_meeting(x+hsp,y,obj_wall)){
  while(!place_meeting(x+sign(hsp),y,obj_wall)){
    x+=sign(hsp);
  }
  hsp=0
}

else{
  x+=hsp;
}
//kolizja gora dol
if(place_meeting(x,y+1,obj_wall)){
  vsp-=key_up*15
}
vsp+=1
if (place_meeting(x,y+vsp,obj_wall)){
  while(!place_meeting(x,y+sign(vsp),obj_wall)){
    y+=sign(vsp);
  }
  vsp=0
}
else{
  y+=vsp;
}
if global.dir=1
{
image_index=0
}
else
{
image_index=1
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///odmiana
time++
if keyboard_check_pressed(ord("Z"))
{
 instance_create(x,y-10,obj_char)
 instance_destroy()
}
 else if time=20
 {
 time=0
 global.cards-=1
 }
 else if global.cards&lt;=0
 {
 instance_create(x,y-10,obj_char)
 instance_destroy()
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>col = make_color_rgb(150, 0, 0);
col2 = make_color_rgb(200, 0, 0);
var pc;
pc = (global.cards / 1) * 10;
draw_set_color(c_black);
draw_set_font(karty);
draw_sprite(back, 0, 720, 380);
draw_healthbar(270, 750, 620, 780, global.hp, 1, col, col, 0, false, false);
draw_healthbar(270, 750, 620, 765, global.hp, 1, col2, col2, 0, false, false);
draw_sprite(front, 0, 720, 380);
var pc;
draw_text(158,750,string(global.cards))

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
